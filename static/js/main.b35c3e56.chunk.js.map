{"version":3,"sources":["Constants/index.js","Reducers/index.js","Store/index.js","Actions/index.js","Actions/middleware.js","Components/Header/Header.js","Components/Cards/Card1/Card1.js","Components/Duration/index.js","Components/Channels/index.js","Components/Categories/index.js","Containers/Homepage/index.js","App.js","index.js"],"names":["initialState","items","chart1","data","loaded","chart2","chart3","chart4","rootReducer","combineReducers","itemReducer","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","payload","chartReducer","itemLoading","status","itemLoadingError","store","createStore","applyMiddleware","thunk","fetchDataLoading","fetchDataSuccess","fetchDataFailure","convertToSeconds","duration","moment","asSeconds","buildChart1","dispatch","timeData","durations","map","item","time","Date","date","toDateString","month","getMonth","year","getFullYear","buildChart2","_step","categoryObj","_iterator","_createForOfIteratorHelper","s","n","done","value","category","forEach","err","e","f","buildChart3","_step2","_iterator2","_loop","buildChart4","_step3","channels","_iterator3","snippet","channelTitle","count","console","log","Header","react_default","a","createElement","Fragment","useStyle","makeStyles","root","boxShadow","Card1","_ref","onClickFunction","onClick","children","classes","Card","className","DurationChart","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderChart","bind","assertThisInitialized","key","rawData","chartData","reduce","rv","x","itemDate","push","y","parseInt","react_vis_es","xType","width","height","margin","left","right","top","bottom","title","animation","Component","connect","bindActionCreators","ChannelChart","renderBarChart","sort","b","slice","barChartData","yType","damping","stiffness","color","CategoryChart","renderPieChart","arrayOfCategories","Number","categoryChartData","Homepage","ChartCategoryByNumber","ChartTimeByDay","ChartCategoryByTime","ChartChannels","style","Components_Header_Header","Grid","container","spacing","xs","Cards_Card1_Card1","Channels","textAlign","fontWeight","marginTop","Duration","Categories","React","App","Containers_Homepage","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b35c3e56.chunk.js","sourcesContent":["export const FETCH_DATA = 'FETCH_DATA';\nexport const FETCH_DATA_LOADING = 'FETCH_DATA_LOADING';\nexport const FETCH_DATA_LOADING_SUCCESS = 'FETCH_DATA_LOADING_SUCCESS';\nexport const FETCH_DATA_LOADING_FAILURE = 'FETCH_DATA_LOADING_FAILURE';\nexport const CHART1_DATA_LOADING_SUCCESS = 'CHART1_DATA_LOADING_SUCCESS';\nexport const CHART2_DATA_LOADING_SUCCESS = 'CHART2_DATA_LOADING_SUCCESS';\nexport const CHART3_DATA_LOADING_SUCCESS = 'CHART3_DATA_LOADING_SUCCESS';\nexport const CHART4_DATA_LOADING_SUCCESS = 'CHART4_DATA_LOADING_SUCCESS';\n\nexport const rootURL = 'https://jsonplaceholder.typicode.com/todos/1';\n\nexport const initialState = {\n    items: [],\n    chart1: {\n        data: [],\n        loaded: false\n    },\n    chart2: {\n        data: {},\n        loaded: false\n    },\n    chart3: {\n        data: {},\n        loaded: false\n    },\n    chart4: {\n        data: {},\n        loaded: false\n    }\n}","import {FETCH_DATA,FETCH_DATA_LOADING,FETCH_DATA_LOADING_SUCCESS,FETCH_DATA_LOADING_FAILURE,initialState, CHART1_DATA_LOADING_SUCCESS, CHART2_DATA_LOADING_SUCCESS, CHART3_DATA_LOADING_SUCCESS, CHART4_DATA_LOADING_SUCCESS} from '../Constants';\nimport { combineReducers } from 'redux';\n\nexport const itemReducer = (state = initialState,action) => {\n    switch(action.type) {\n        case FETCH_DATA_LOADING_SUCCESS:\n            return {\n                ...state,\n                items: [...action.payload]\n            }\n        default:\n            return state;\n    }\n}\n\nexport const chartReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case CHART1_DATA_LOADING_SUCCESS:\n            return {\n                ...state,\n                chart1: {...action.payload},\n            }\n        case CHART2_DATA_LOADING_SUCCESS:\n            return {\n                ...state,\n                chart2: {...action.payload}\n            }\n        case CHART3_DATA_LOADING_SUCCESS:\n            return {\n                ...state,\n                chart3: {...action.payload}\n            }\n        case CHART4_DATA_LOADING_SUCCESS:\n            return {\n                ...state,\n                chart4: {...action.payload}\n            }\n        default:\n            return state;\n    }\n}\n\nexport const itemLoading = (state = false,action) => {\n    switch(action.type) {\n        case FETCH_DATA_LOADING:\n            return action.status\n        default:\n            return state;\n    }\n} \n\nexport const itemLoadingError = (state = false,action) => {\n    switch(action.type) {\n        case FETCH_DATA_LOADING_FAILURE:\n            return action.status\n        default:\n            return state;\n    }\n}\n\nexport const rootReducer = combineReducers({\n    itemReducer,\n    chartReducer,\n    itemLoading,\n    itemLoadingError\n});\n\nexport default rootReducer;\n\n","import { createStore,applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../Reducers';\n\n//const store = createStore(rootReducer);\nconst store = createStore(rootReducer,applyMiddleware(thunk));\n\nexport default store;","import {FETCH_DATA_LOADING_SUCCESS, FETCH_DATA_LOADING_FAILURE, FETCH_DATA_LOADING, CHART1_DATA_LOADING_SUCCESS, CHART2_DATA_LOADING_SUCCESS, CHART3_DATA_LOADING_SUCCESS, CHART4_DATA_LOADING_SUCCESS} from '../Constants';\n\nexport const fetchDataLoading = (status) => {\n    return {\n        type: FETCH_DATA_LOADING,\n        status\n    }\n}\n\nexport const fetchDataSuccess = (data) => {\n    return {\n        type: FETCH_DATA_LOADING_SUCCESS,\n        payload: data\n    }\n}\n\nexport const fetchDataFailure = (status) => {\n    return {\n        type: FETCH_DATA_LOADING_FAILURE,\n        status\n    }\n}\n\nexport const fetchChart1 = (data) => {\n    return {\n        type: CHART1_DATA_LOADING_SUCCESS,\n        payload: {\n            data,\n            loaded: true\n        }\n    }\n}\n\nexport const fetchChart2 = (data) => {\n    return {\n        type: CHART2_DATA_LOADING_SUCCESS,\n        payload: {\n            data,\n            loaded: true\n        }\n    }\n}\n\nexport const fetchChart3 = (data) => {\n    return {\n        type: CHART3_DATA_LOADING_SUCCESS,\n        payload: {\n            data,\n            loaded: true\n        }\n    }\n}\n\nexport const fetchChart4 = (data) => {\n    return {\n        type: CHART4_DATA_LOADING_SUCCESS,\n        payload: {\n            data,\n            loaded: true\n        }\n    }\n}\n\n// export const fetchData = (url) => {\n//     return (dispatch) => {\n//         dispatch(fetchDataLoading(true));\n\n//         dispatch(fetchDataSuccess(data.durations));\n//         // dispatch(buildChart1(data.durations));\n//         // dispatch(getCategories(data.durations));\n//         // dispatch(buildChart3(data.durations));\n\n//         dispatch(fetchDataLoading(false));\n//         // fetch(url)\n//         //     .then(response => {\n//         //         dispatch(fetchDataLoading(false));\n//         //         return response;\n//         //     })\n//         //     .then(response => response.json())\n//         //     .then(items => dispatch(fetchDataSuccess(items)))\n//         //     .catch(error => dispatch(fetchDataFailure(error)))\n//     }\n// }","import data from '../Constants/db.json';\nimport { fetchChart1, fetchChart2, fetchChart3, fetchChart4 } from './index';\n\nimport * as moment from 'moment';\n\nconst convertToSeconds = (duration) => {\n    const newDuration = moment.duration(duration, moment.ISO_8601);\n    return newDuration.asSeconds();\n}\n\nexport const buildChart1 = () => {\n    // To Plot:\n    // Y-AXIS: duration of watching videos\n    // X-AXIS: day/date/month/year.\n    // TODO: Will probably need to group all dates in one object and sum up durations. \n    // But that would lose the count of the videos watched \n    return dispatch => {\n        const timeData = data.durations.map(item => {\n            const time = new Date(item.time);\n            return {\n                duration: convertToSeconds(item.duration),\n                date: time.toDateString(),\n                month: time.getMonth(),\n                year: time.getFullYear()\n            }\n        });  \n\n        return dispatch(fetchChart1(timeData))\n    }\n}\n\nexport const buildChart2 = () => {\n    // To Plot:\n    // Y-AXIS: Number of videos\n    // X-AXIS: Category\n    return dispatch => {\n        const categoryObj = {};\n        for(let item of data.durations) {\n            item.category.forEach(category => categoryObj[category] = categoryObj[category] ? categoryObj[category]+1 : 1)\n        }\n        dispatch(fetchChart2(categoryObj))    \n    };\n}\n\nexport const buildChart3 = () => {\n    // To Plot:\n    // Y-AXIS: Duration of videos\n    // X-AXIS: Category\n    return dispatch => {\n        const categoryObj = {};\n        for(let item of data.durations) {\n            const duration = convertToSeconds(item.duration);\n            item.category.forEach(category => categoryObj[category] = categoryObj[category] ? categoryObj[category]+duration : duration)\n        }\n        dispatch(fetchChart3(categoryObj))    \n    };\n}\n\nexport const buildChart4 = () => {\n    // To Plot:\n    // Y-AXIS: Number of videos\n    // X-AXIS: Channel\n    return dispatch => {\n        const channels = {}\n        for(let item of data.durations) {\n            const duration = convertToSeconds(item.duration);\n            if (channels[item.snippet.channelTitle] === undefined){\n                channels[item.snippet.channelTitle] = {\n                    duration,\n                    count: 1\n                }\n            } else {\n                channels[item.snippet.channelTitle]['duration'] = channels[item.snippet.channelTitle]['duration'] ? channels[item.snippet.channelTitle]['duration'] + duration : duration;\n                channels[item.snippet.channelTitle]['count'] = channels[item.snippet.channelTitle]['count'] ? channels[item.snippet.channelTitle]['count'] + 1 : 1;\n            }\n        }\n        console.log(channels);\n        dispatch(fetchChart4(channels));\n    }\n}","import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n    return (\n        <>\n        <h1>Visualizing the YouTube Data of</h1>\n        <h2>Utkarsh Singh</h2>\n        <hr></hr>\n        </>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport { Card, CardContent, makeStyles, Typography } from '@material-ui/core';\n\nconst useStyle = makeStyles(() => ({\n    root: {\n        // height: '200px',\n        boxShadow: '5px 10px 5px #aaaaaa'\n    }\n}))\n\nconst Card1 = ({ onClick: onClickFunction, children }) => {\n    const classes = useStyle();\n    return (\n        <Card onClick={onClickFunction ? () => onClickFunction() : null} className={classes.root}>\n            {/* <CardContent> */}\n                    {children}\n            {/* </CardContent> */}\n        </Card>\n    )\n}\n\nexport default Card1;","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as moment from 'moment';\n\nimport { buildChart1 } from '../../Actions/middleware';\nimport { fetchDataLoading } from '../../Actions';\nimport { LineSeries, VerticalGridLines, HorizontalGridLines, XYPlot, XAxis, YAxis } from 'react-vis';\n\nconst groupBy = function(xs, key) {\n  return xs.reduce(function(rv, x) {\n    // (rv[x[key]] = (rv[x[key]] || 0) + x.duration)\n    if (rv[x[key]] === undefined) {\n        rv[x[key]] = 0;\n    } else {\n        rv[x[key]] += x.duration\n    }\n    return rv;\n  }, {});\n};\n\n\nclass DurationChart extends Component {\n    constructor(props) {\n        super(props);\n        this.renderChart = this.renderChart.bind(this);\n    }\n\n    componentDidMount () {\n        this.props.fetchDataLoading(true);\n        this.props.buildChart1();\n        this.props.fetchDataLoading(false);\n    }\n\n    renderChart() {\n        let data = []\n        const { chartData: { data: rawData } } = this.props;\n        let chartData = groupBy(rawData, 'date')\n        for(let item in chartData) {\n            const itemDate = new Date(item);\n            data.push({x: itemDate, y: parseInt(chartData[item]/60)})\n        }\n        return data;\n    }\n    \n    render() {\n        const chartData = this.renderChart()\n        return (\n            <>\n                <XYPlot\n                    xType=\"time\"\n                    width={800}\n                    height={300}\n                    margin={{left: 70, right: 10, top: 10, bottom: 40}}\n                >\n                    <HorizontalGridLines />\n                    <VerticalGridLines />\n                    <XAxis/>\n                    <YAxis title='Minutes'/>\n                    <LineSeries \n                        animation\n                        data={chartData}/>\n                </XYPlot> \n            </>\n        )\n    }\n}\n\n// const DurationChart = ({ buildChart}) => {\n//     buildChart();\n//     // const dispatch = useDispatch();\n//     // dispatch(buildChart1);\n//     const chartData = useSelector(state => state.chartReducer.chart1)\n//     console.log('Props of functional component', chartData)\n// }\n\nconst mapStateToProps = (state) => {\n    return {\n        itemLoading: state.itemLoading,\n        chartData: state.chartReducer.chart1,\n        // chartLoaded: state.chartDataLoaded.chart1\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n    {\n        fetchDataLoading,\n        buildChart1\n    },\n    dispatch\n)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DurationChart);","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {XYPlot, LineSeries, HorizontalBarSeries, XAxis, YAxis, Hint } from 'react-vis';\n\nimport { fetchDataLoading } from '../../Actions';\nimport { buildChart4 } from '../../Actions/middleware';\n\nclass ChannelChart extends Component {\n    constructor (props) {\n        super(props);\n        this.renderBarChart = this.renderBarChart.bind(this);\n    }\n\n    componentDidMount () {\n        this.props.fetchDataLoading(true);\n        this.props.buildChart4();\n        this.props.fetchDataLoading(false);\n    }\n\n    renderBarChart () {\n        const { chartData: { data: chartData } } = this.props;\n        let data = [];\n        for(let item in chartData) {  \n            data.push({ y: item, x: chartData[item].count })\n        }\n        data.sort((a, b) => b.x -a.x);\n        const splicedChartData = data.slice(0, 10);\n        return splicedChartData;\n    }\n\n    render() {\n        const barChartData = this.renderBarChart();\n        return (\n            <>\n                <XYPlot\n                    yType=\"ordinal\"\n                    // stackBy=\"x\"\n                    width={800}\n                    height={300}\n                    margin={{left: 200, right: 10, top: 10, bottom: 40}}\n                    >\n                    <XAxis title='Number of videos' />\n                    <YAxis />\n                    <HorizontalBarSeries\n                        animation={{damping: 9, stiffness: 300}}\n                        // cluster=\"2015\"\n                        // marginLeft={240}\n                        color=\"#f0f0f0\"\n                        data={barChartData}\n                    />\n                </XYPlot>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        itemLoading: state.itemLoading,\n        chartData: state.chartReducer.chart4\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n    {\n        fetchDataLoading,\n        buildChart4\n    },\n    dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelChart);","import React, { Component} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { buildChart2, buildChart3 } from '../../Actions/middleware';\nimport {fetchDataLoading } from '../../Actions';\nimport { XYPlot, ArcSeries, VerticalBarSeries, YAxis, XAxis } from 'react-vis';\n\nconst PI = 3.14;\n\nclass CategoryChart extends Component {\n    constructor (props) {\n        super(props);\n        this.renderPieChart = this.renderPieChart.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.fetchDataLoading(true);\n        this.props.buildChart2();\n        this.props.fetchDataLoading(false);\n    }\n\n    renderPieChart () {\n        const { chartData: { data: chartData} } = this.props;\n        let arrayOfCategories = [];\n        let cout = 0;\n        for(let item in chartData) {\n            arrayOfCategories.push({ x: item, y: Number(chartData[item]) })\n        }\n        arrayOfCategories.sort((a,b) => b.y - a.y);\n        const topCategories = arrayOfCategories.slice(0, 10);\n        // const totalTopVideos = topCategories.reduce((value, item) => value+item.number, 0);\n        // let startAngle = 0\n        // const pieChartData = topCategories.map(category => {\n        //     const angle = (2*PI*category.number)/totalTopVideos;\n        //     startAngle += angle; \n        //     const innerRadius = parseInt(Math.random()*100);\n        //     const outerRadius = innerRadius + parseInt(Math.random()*100);\n        //     return {\n        //         angle0: startAngle,\n        //         angle,\n        //         radius0: 2,\n        //         radius: 5,\n        //         color: Math.random\n        //     }\n        // })\n        // console.log(pieChartData)\n        return topCategories;\n    }\n\n    render() {\n        const categoryChartData = this.renderPieChart();\n        console.log(categoryChartData)\n        return (\n            <>\n                <XYPlot\n                    yType=\"ordinal\"\n                    width={800}\n                    height={400}\n                >\n                    <YAxis />\n                    <XAxis />\n                    <VerticalBarSeries \n                        className=\"vertical-bar-series-example\"\n                        data={categoryChartData}\n                    />\n                </XYPlot>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log('MSTP : ',state)\n    return {\n        itemLoading: state.itemLoading,\n        chartData: state.chartReducer.chart2,\n        // chartLoaded: state.chartDataLoaded.chart1\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n    {\n        fetchDataLoading,\n        buildChart2,\n        buildChart3,\n    },\n    dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryChart);","import React from 'react';\nimport {bindActionCreators} from 'redux';\nimport { connect } from 'react-redux';\nimport { Grid } from '@material-ui/core';\n\nimport { fetchDataLoading, fetchDataSuccess, fetchDataFailure } from '../../Actions';\nimport { buildChart1, buildChart2, buildChart3, buildChart4 } from '../../Actions/middleware';\nimport Header from '../../Components/Header/Header';\nimport Card1 from '../../Components/Cards/Card1/Card1';\nimport DurationChart from '../../Components/Duration';\nimport ChannelChart from '../../Components/Channels';\nimport CategoryChart from '../../Components/Categories';\nclass Homepage extends React.Component {\n    constructor (props) {\n        super(props);\n        this.ChartCategoryByNumber = this.ChartCategoryByNumber.bind(this);\n        this.ChartTimeByDay = this.ChartTimeByDay.bind(this);\n        this.ChartCategoryByTime = this.ChartCategoryByTime.bind(this);\n        this.ChartChannels = this.ChartChannels.bind(this);\n    }\n    \n    ChartCategoryByNumber () { \n        this.props.fetchDataLoading(true);\n        this.props.buildChart1();\n        this.props.fetchDataLoading(false);\n    }\n\n    ChartTimeByDay () {\n        this.props.fetchDataLoading(true);\n        this.props.buildChart2();\n        this.props.fetchDataLoading(false);\n    }\n\n    ChartCategoryByTime () {\n        this.props.fetchDataLoading(true);\n        this.props.buildChart3();\n        this.props.fetchDataLoading(false);\n    }\n\n    ChartChannels () {\n        this.props.fetchDataLoading(true);\n        this.props.buildChart4();\n        this.props.fetchDataLoading(false);\n    }\n\n    render() {\n        const { itemLoading } = this.props\n        if(itemLoading) {\n            return <p> Loading......</p>\n        }\n        return (\n            <div style={{width: '80%', margin: 'auto'}}>\n                <Header/>\n                <Grid container spacing={4}>\n                    <Grid item xs={12}>\n                        <Card1 \n                            // onClick={this.ChartCategoryByNumber}\n                        >\n                            <h1>Top 10 Most Watched Channels</h1>\n                            <ChannelChart />\n                            <h4 style={{textAlign: 'center', fontWeight: 200, marginTop: 0}}>Number of videos</h4>\n                            {/* Start plotting data. Consider naming charts as simply category, tags, channel, etc. and grouping data accordingly (duration, number together) */}\n                        </Card1>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Card1>\n                            <h1>How much YT do you consume every day?</h1>\n                            <DurationChart />\n                        </Card1>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Card1>\n                            <h1>A Chart of your 10 Most Watched Categories</h1>\n                            <CategoryChart />\n                        </Card1>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Card1 onClick={this.ChartChannels}>\n                            Graph 4\n                        </Card1>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        itemReducer: [...state.itemReducer.items],\n        itemLoading: state.itemLoading,\n        itemLoadingError: state,\n        // chartReducer: state.chartReducer\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n    {\n        fetchDataLoading,\n        fetchDataSuccess,\n        fetchDataFailure,\n        buildChart1,\n        buildChart2,\n        buildChart3,\n        buildChart4\n    },\n    dispatch\n)\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Homepage);","import React, { Component } from 'react';\nimport './App.css';\nimport Homepage from './Containers/Homepage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Homepage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './Store';\nimport App from './App';\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}